# Generated by Django 3.0.10 on 2020-11-24 14:06

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main_service_of_plotters.apps.materials.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0013_auto_20201120_1508'),
    ]

    operations = [
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data of creation')),
                ('date_update', models.DateTimeField(auto_now=True, null=True, verbose_name='Date of update')),
                ('scratch_code', models.CharField(blank=True, help_text='Scratch code is secret key what user scratch from labels and put to system. Then system activate this label', max_length=16, unique=True, validators=[main_service_of_plotters.apps.materials.validators.validate_unique_code], verbose_name='Unique scratch code')),
                ('barcode', models.CharField(blank=True, help_text='Identification number of label/', max_length=16, unique=True, validators=[main_service_of_plotters.apps.materials.validators.validate_unique_code], verbose_name='Unique barcode')),
                ('count', models.IntegerField(default=0, help_text='Amount of labels in pack on the start', verbose_name='Start amount')),
                ('available_count', models.IntegerField(default=0, help_text='Remaining labels in pack.', verbose_name='Available amount')),
                ('date_of_activation', models.DateTimeField(default=None, help_text='Date then user activate this label in plotter.', null=True, verbose_name='Date of activation')),
                ('is_active', models.BooleanField(default=False, help_text='Show what label was activated early', verbose_name='Is active')),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labels',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data of creation')),
                ('date_update', models.DateTimeField(auto_now=True, null=True, verbose_name='Date of update')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Name of template')),
                ('file_photo', models.FileField(help_text='File of schematic image of template', upload_to='photo/%Y/%m/%d', validators=[main_service_of_plotters.apps.materials.validators.validate_file_photo], verbose_name='Image')),
                ('file_plt', models.FileField(upload_to='documents/%Y/%m/%d', validators=[main_service_of_plotters.apps.materials.validators.validate_file_plt], verbose_name='Blueprint file (*.plt)')),
                ('size', models.CharField(blank=True, choices=[('M', 'M'), ('S', 'S'), ('L', 'L')], help_text='This is size, points to size of template', max_length=1, null=True, verbose_name='Size')),
                ('device_category', models.ForeignKey(blank=True, help_text='The type of device of template (phone, tablet, etc.)', null=True, on_delete=django.db.models.deletion.CASCADE, to='category.DeviceCategory', verbose_name='Category of devices')),
                ('manufacturer_category', models.ForeignKey(blank=True, help_text='Manufacturer of device of template (Apple, Samsung, etc.)', null=True, on_delete=django.db.models.deletion.CASCADE, to='category.Manufacturer', verbose_name='Manufacturer of the model')),
                ('model_category', models.ForeignKey(blank=True, help_text='Name of device tempalte created for.', null=True, on_delete=django.db.models.deletion.CASCADE, to='category.ModelsTemplate', verbose_name='Model of device')),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
            },
        ),
    ]
